# .github/workflows/deploy.yml
name: Build and Release XPI (Main Branch)

on:
  push:
    branches: [ main ] # Trigger on pushes to the main branch

permissions:
  contents: write # Allow the workflow to create releases

jobs:
  build-and-release:
    name: Build XPI and Create Draft Release
    runs-on: ubuntu-latest # Use a standard Linux runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Checks out your repository code

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Specify Node.js version (LTS recommended)
          cache: 'npm' # Enable caching for npm dependencies

      - name: Install dependencies
        run: npm ci # Use 'ci' for clean installs in workflows

      - name: Build extension using web-ext
        run: npm run build # This now runs the updated build script including minification and packaging from 'dist'

      - name: Get package version
        id: package-version
        # Reads the version from package.json and makes it available as an output
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Prepare artifact details
        id: artifact-details
        run: |
          VERSION=${{ steps.package-version.outputs.version }}
          ARTIFACT_NAME="tabtogether-${VERSION}.xpi" # Desired .xpi filename
          ZIP_PATH="web-ext-artifacts/tabtogether-${VERSION}.zip" # Path generated by web-ext build
          echo "artifact_name=${ARTIFACT_NAME}" >> $GITHUB_OUTPUT
          echo "zip_path=${ZIP_PATH}" >> $GITHUB_OUTPUT

      - name: Rename artifact to .xpi
        # Renames the .zip file generated by web-ext build to .xpi
        run: mv ${{ steps.artifact-details.outputs.zip_path }} ${{ steps.artifact-details.outputs.artifact_name }}

      - name: Create/Update Draft Release and Upload Artifact
        uses: softprops/action-gh-release@v2 # Action to manage GitHub releases
        with:
          name: Latest Main Build (${{ github.sha }}) # Release name includes commit SHA for reference
          tag_name: latest-main # Use a fixed tag name for the latest build from main
          body: "Automatic build from main branch commit ${{ github.sha }}. This is a development build, not intended for general use."
          draft: true # Mark as a draft release (not published)
          prerelease: true # Mark as a pre-release
          files: ${{ steps.artifact-details.outputs.artifact_name }} # Upload the renamed .xpi file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Token provided by GitHub Actions for authentication